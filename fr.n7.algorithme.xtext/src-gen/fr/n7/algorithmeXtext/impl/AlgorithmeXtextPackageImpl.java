/**
 * generated by Xtext 2.23.0
 */
package fr.n7.algorithmeXtext.impl;

import fr.n7.algorithmeXtext.Algorithme;
import fr.n7.algorithmeXtext.AlgorithmeElement;
import fr.n7.algorithmeXtext.AlgorithmeXtextFactory;
import fr.n7.algorithmeXtext.AlgorithmeXtextPackage;
import fr.n7.algorithmeXtext.Entree;
import fr.n7.algorithmeXtext.Ressource;
import fr.n7.algorithmeXtext.Sortie;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class AlgorithmeXtextPackageImpl extends EPackageImpl implements AlgorithmeXtextPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass algorithmeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass algorithmeElementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ressourceEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sortieEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass entreeEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see fr.n7.algorithmeXtext.AlgorithmeXtextPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private AlgorithmeXtextPackageImpl()
  {
    super(eNS_URI, AlgorithmeXtextFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link AlgorithmeXtextPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static AlgorithmeXtextPackage init()
  {
    if (isInited) return (AlgorithmeXtextPackage)EPackage.Registry.INSTANCE.getEPackage(AlgorithmeXtextPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredAlgorithmeXtextPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    AlgorithmeXtextPackageImpl theAlgorithmeXtextPackage = registeredAlgorithmeXtextPackage instanceof AlgorithmeXtextPackageImpl ? (AlgorithmeXtextPackageImpl)registeredAlgorithmeXtextPackage : new AlgorithmeXtextPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theAlgorithmeXtextPackage.createPackageContents();

    // Initialize created meta-data
    theAlgorithmeXtextPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theAlgorithmeXtextPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(AlgorithmeXtextPackage.eNS_URI, theAlgorithmeXtextPackage);
    return theAlgorithmeXtextPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAlgorithme()
  {
    return algorithmeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAlgorithme_Nom()
  {
    return (EAttribute)algorithmeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAlgorithme_AlgorithmeElement()
  {
    return (EReference)algorithmeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAlgorithmeElement()
  {
    return algorithmeElementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAlgorithmeElement_Nom()
  {
    return (EAttribute)algorithmeElementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRessource()
  {
    return ressourceEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRessource_Type()
  {
    return (EAttribute)ressourceEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSortie()
  {
    return sortieEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSortie_Valeur()
  {
    return (EAttribute)sortieEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEntree()
  {
    return entreeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEntree_Argument()
  {
    return (EAttribute)entreeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AlgorithmeXtextFactory getAlgorithmeXtextFactory()
  {
    return (AlgorithmeXtextFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    algorithmeEClass = createEClass(ALGORITHME);
    createEAttribute(algorithmeEClass, ALGORITHME__NOM);
    createEReference(algorithmeEClass, ALGORITHME__ALGORITHME_ELEMENT);

    algorithmeElementEClass = createEClass(ALGORITHME_ELEMENT);
    createEAttribute(algorithmeElementEClass, ALGORITHME_ELEMENT__NOM);

    ressourceEClass = createEClass(RESSOURCE);
    createEAttribute(ressourceEClass, RESSOURCE__TYPE);

    sortieEClass = createEClass(SORTIE);
    createEAttribute(sortieEClass, SORTIE__VALEUR);

    entreeEClass = createEClass(ENTREE);
    createEAttribute(entreeEClass, ENTREE__ARGUMENT);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    ressourceEClass.getESuperTypes().add(this.getAlgorithmeElement());
    sortieEClass.getESuperTypes().add(this.getAlgorithmeElement());
    entreeEClass.getESuperTypes().add(this.getAlgorithmeElement());

    // Initialize classes and features; add operations and parameters
    initEClass(algorithmeEClass, Algorithme.class, "Algorithme", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAlgorithme_Nom(), ecorePackage.getEString(), "nom", null, 0, 1, Algorithme.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAlgorithme_AlgorithmeElement(), this.getAlgorithmeElement(), null, "algorithmeElement", null, 0, -1, Algorithme.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(algorithmeElementEClass, AlgorithmeElement.class, "AlgorithmeElement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAlgorithmeElement_Nom(), ecorePackage.getEString(), "nom", null, 0, 1, AlgorithmeElement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ressourceEClass, Ressource.class, "Ressource", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRessource_Type(), ecorePackage.getEString(), "type", null, 0, 1, Ressource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sortieEClass, Sortie.class, "Sortie", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSortie_Valeur(), ecorePackage.getEString(), "valeur", null, 0, 1, Sortie.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(entreeEClass, Entree.class, "Entree", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEntree_Argument(), ecorePackage.getEString(), "argument", null, 0, 1, Entree.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //AlgorithmeXtextPackageImpl
