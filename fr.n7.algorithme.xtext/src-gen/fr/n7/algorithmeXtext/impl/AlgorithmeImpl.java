/**
 * generated by Xtext 2.23.0
 */
package fr.n7.algorithmeXtext.impl;

import fr.n7.algorithmeXtext.Algorithme;
import fr.n7.algorithmeXtext.AlgorithmeElement;
import fr.n7.algorithmeXtext.AlgorithmeXtextPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Algorithme</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.n7.algorithmeXtext.impl.AlgorithmeImpl#getNom <em>Nom</em>}</li>
 *   <li>{@link fr.n7.algorithmeXtext.impl.AlgorithmeImpl#getAlgorithmeElement <em>Algorithme Element</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AlgorithmeImpl extends MinimalEObjectImpl.Container implements Algorithme
{
  /**
   * The default value of the '{@link #getNom() <em>Nom</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNom()
   * @generated
   * @ordered
   */
  protected static final String NOM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNom() <em>Nom</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNom()
   * @generated
   * @ordered
   */
  protected String nom = NOM_EDEFAULT;

  /**
   * The cached value of the '{@link #getAlgorithmeElement() <em>Algorithme Element</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAlgorithmeElement()
   * @generated
   * @ordered
   */
  protected EList<AlgorithmeElement> algorithmeElement;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AlgorithmeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AlgorithmeXtextPackage.Literals.ALGORITHME;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNom()
  {
    return nom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNom(String newNom)
  {
    String oldNom = nom;
    nom = newNom;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AlgorithmeXtextPackage.ALGORITHME__NOM, oldNom, nom));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<AlgorithmeElement> getAlgorithmeElement()
  {
    if (algorithmeElement == null)
    {
      algorithmeElement = new EObjectContainmentEList<AlgorithmeElement>(AlgorithmeElement.class, this, AlgorithmeXtextPackage.ALGORITHME__ALGORITHME_ELEMENT);
    }
    return algorithmeElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case AlgorithmeXtextPackage.ALGORITHME__ALGORITHME_ELEMENT:
        return ((InternalEList<?>)getAlgorithmeElement()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AlgorithmeXtextPackage.ALGORITHME__NOM:
        return getNom();
      case AlgorithmeXtextPackage.ALGORITHME__ALGORITHME_ELEMENT:
        return getAlgorithmeElement();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AlgorithmeXtextPackage.ALGORITHME__NOM:
        setNom((String)newValue);
        return;
      case AlgorithmeXtextPackage.ALGORITHME__ALGORITHME_ELEMENT:
        getAlgorithmeElement().clear();
        getAlgorithmeElement().addAll((Collection<? extends AlgorithmeElement>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AlgorithmeXtextPackage.ALGORITHME__NOM:
        setNom(NOM_EDEFAULT);
        return;
      case AlgorithmeXtextPackage.ALGORITHME__ALGORITHME_ELEMENT:
        getAlgorithmeElement().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AlgorithmeXtextPackage.ALGORITHME__NOM:
        return NOM_EDEFAULT == null ? nom != null : !NOM_EDEFAULT.equals(nom);
      case AlgorithmeXtextPackage.ALGORITHME__ALGORITHME_ELEMENT:
        return algorithmeElement != null && !algorithmeElement.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (nom: ");
    result.append(nom);
    result.append(')');
    return result.toString();
  }

} //AlgorithmeImpl
